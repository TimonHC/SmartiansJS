//Оператор == сравнивает переменные объектов, проверяя, ссылаются ли они на один объект.
//Но иногда полезно было бы сравнить объекты по содержимому.Напиши функцию deepEqual,
//которая принимает два значения и возвращает true, только если это два одинаковых значения или это объекты,
//свойства которых имеют одинаковые значения, если их сравнивать рекурсивным вызовом deepEqual.
//Чтобы узнать, когда сравнивать величины через ===, а когда – объекты по содержимому,
//используйте оператор typeof. Если он выдаёт “object” для обеих величин, значит нужно делать глубокое сравнение.
//Не забудь об одном дурацком исключении, случившемся из-за исторических причин: “typeof null” тоже возвращает “object”.
var obj1 = {
    objProperty1: 1,
    objProperty2: 1,
};
var obj2 = {
    objProperty1: 1,
    objProperty2: 1,
};
function deepEqual(arg1, arg2){
    if (arg1 && arg2 !== null && typeof arg1 === 'object' && typeof arg2 === 'object') {
        for (var key in arg1) {
            console.log(((arg2.hasOwnProperty(key)) && (arg1[key] === arg2[key])));
        }} else {
            console.log((arg1 === arg2));
        }
}
deepEqual(obj1, obj2);